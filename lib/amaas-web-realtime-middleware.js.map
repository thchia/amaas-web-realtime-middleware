{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 399d74da6850a5a423c6","webpack:///./src/actions/types.js","webpack:///./src/index.js","webpack:///./src/actions/index.js"],"names":["WS_CONNECT","WS_DISCONNECT","WS_RECEIVE_MSG","WS_CONNECTED","WS_CLOSED","WS_ERROR","createMW","ws","initialiseWS","store","config","clientId","Date","now","toString","conn","Device","push","id","subCount","on","dispatch","subscribe","error","topic","messageEnc","message","topics","length","lastIndex","lastConnLength","availableSubsInConn","slice","map","remainingTopics","console","action","type","payload","next","connection","end","closed","connect","connected","disconnect","receiveMessage","types"],"mappings":"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","file":"amaas-web-realtime-middleware.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"amaas-web-realtime-middleware\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"amaas-web-realtime-middleware\"] = factory();\n\telse\n\t\troot[\"amaas-web-realtime-middleware\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 399d74da6850a5a423c6","export const WS_CONNECT = '@@amaas-web-rt-mw/WS_CONNECT'\nexport const WS_DISCONNECT = '@@amaas-web-rt-mw/WS_DISCONNECT'\nexport const WS_RECEIVE_MSG = '@@amaas-web-rt-mw/RECEIVE_MSG'\nexport const WS_CONNECTED = '@@amaas-web-rt-mw/CONNECTED'\nexport const WS_CLOSED = '@@amaas-web-rt-mw/CLOSED'\nexport const WS_ERROR = '@@amaas-web-rt-mw/ERROR'\n\n\n// WEBPACK FOOTER //\n// ./src/actions/types.js","import {\n  WS_CONNECT,\n  WS_DISCONNECT,\n  WS_RECEIVE_MSG,\n  WS_CONNECTED,\n  WS_CLOSED,\n  WS_ERROR\n} from './actions/types'\nimport {\n  closed,\n  connect,\n  connected,\n  disconnect,\n  error,\n  receiveMessage\n} from './actions'\n\nconst createMW = Device => {\n  // This needs to be an array for potential extra clients\n  let ws = []\n\n  const initialiseWS = (store, config) => {\n    const clientId = Date.now().toString()\n    const conn = new Device(config)\n    ws.push({ id: clientId, conn, subCount: 0 })\n\n    conn.on('connect', () => {\n      store.dispatch(connected())\n      subscribe(store, config)\n    })\n    conn.on('close', () => {\n      store.dispatch(closed())\n    })\n    conn.on('error', error => {\n      store.dispatch(error(error))\n    })\n    conn.on('message', (topic, messageEnc) => {\n      const message = messageEnc.toString()\n      store.dispatch(receiveMessage(topic, message))\n    })\n  }\n\n  const subscribe = (store, config) => {\n    if (config.topics.length === 0) return\n\n    // Cannot subscribe to more than 50 topics in a single connection\n    const { topics } = config\n    const lastIndex = ws.length - 1\n    const lastConnLength = ws[lastIndex].subCount\n    const availableSubsInConn = 50 - lastConnLength\n    if (ws && ws.length > 0) {\n      // First fill up the remaining subscriptions in the last connection\n      topics.slice(0, availableSubsInConn).map(topic => {\n        ws[lastIndex].conn.subscribe(topic)\n      })\n      ws[lastIndex].subCount =\n        lastConnLength + topics.slice(0, availableSubsInConn).length\n      // If there are still subscriptions left over, initialise another connection\n      if (topics.slice(availableSubsInConn - 1, 50).length > 0) {\n        const remainingTopics = config.topics.slice(availableSubsInConn)\n        config.topics = remainingTopics\n        initialiseWS(store, config)\n      }\n    } else {\n      console.error('Cannot subscribe as there is no WS instance open')\n    }\n  }\n\n  return store => next => action => {\n    switch (action.type) {\n      case WS_CONNECT:\n        const config = action.payload\n        initialiseWS(store, config)\n        return next(action)\n      case WS_DISCONNECT:\n        if (ws && ws.length > 0) {\n          ws.map(connection => {\n            connection.conn.end()\n          })\n          ws = []\n        }\n        return next(action)\n      default:\n        return next(action)\n    }\n  }\n}\n\nexport default createMW\nexport {\n  WS_CONNECT,\n  WS_DISCONNECT,\n  WS_RECEIVE_MSG,\n  WS_CONNECTED,\n  WS_CLOSED,\n  WS_ERROR\n}\nexport { closed, connect, connected, disconnect, error, receiveMessage }\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import * as types from './types'\n\nexport const connect = (config) => (\n  {\n    type: types.WS_CONNECT,\n    payload: { ...config }\n  }\n)\n\nexport const receiveMessage = (topic, message) => (\n  {\n    type: types.WS_RECEIVE_MSG,\n    payload: { topic, message }\n  }\n)\n\nexport const connected = () => (\n  {\n    type: types.WS_RECEIVE_MSG\n  }\n)\n\nexport const closed = () => (\n  {\n    type: types.WS_CLOSED\n  }\n)\n\nexport const error = (error) => (\n  {\n    type: types.WS_ERROR,\n    payload: { error }\n  }\n)\n\nexport const disconnect = () => (\n  {\n    type: types.WS_DISCONNECT\n  }\n)\n\n\n// WEBPACK FOOTER //\n// ./src/actions/index.js"],"sourceRoot":""}